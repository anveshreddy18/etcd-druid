// SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/gardener/etcd-druid/api/core/v1alpha1"
	corev1alpha1 "github.com/gardener/etcd-druid/client/clientset/versioned/typed/core/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeEtcdLists implements EtcdListInterface
type fakeEtcdLists struct {
	*gentype.FakeClientWithList[*v1alpha1.EtcdList, *v1alpha1.EtcdListList]
	Fake *FakeDruidV1alpha1
}

func newFakeEtcdLists(fake *FakeDruidV1alpha1, namespace string) corev1alpha1.EtcdListInterface {
	return &fakeEtcdLists{
		gentype.NewFakeClientWithList[*v1alpha1.EtcdList, *v1alpha1.EtcdListList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("etcdlists"),
			v1alpha1.SchemeGroupVersion.WithKind("EtcdList"),
			func() *v1alpha1.EtcdList { return &v1alpha1.EtcdList{} },
			func() *v1alpha1.EtcdListList { return &v1alpha1.EtcdListList{} },
			func(dst, src *v1alpha1.EtcdListList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.EtcdListList) []*v1alpha1.EtcdList { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.EtcdListList, items []*v1alpha1.EtcdList) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
